name: Build and Push to AWS ECR

on:
  push:
    branches:
      - develop
env:
  ECR_REPOSITORY: veer-test-workflow-containers
  STAGE: develop
  AWS_REGION: us-east-1 # Example AWS region
  ECS_CLUSTER_NAME: veer-deployment-homeporter-test # Your ECS Cluster Name
  ECS_SERVICE_NAME: veer-web-app-github-actions-service # Your ECS Service Name
  TASK_DEFINITION: task-definition.json # Your task definition file
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{env.ECR_REPOSITORY}}-${{env.STAGE}}-${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Render Amazon ECS task definition
      id: render-web-container
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: test-app-for-task-definiton
        image: ${{env.ECR_REPOSITORY}}-${{env.STAGE}}-${{ github.sha }}
        environment-variables: "LOG_LEVEL=info"
    - name: Register ECS task definition
      run: |
        aws ecs register-task-definition \
        --cli-input-json file://$TASK_DEFINITION
    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-web-container.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE_NAME }}
        cluster: ${{ env.ECS_CLUSTER_NAME }}
